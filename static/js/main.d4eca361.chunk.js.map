{"version":3,"sources":["components/title.js","components/stone.js","components/indicator.js","components/volume.js","components/board.js","components/utils.js","index.js"],"names":["Title","React","memo","className","Stone","props","color","value","onClick","Indicator","status","voidFunc","useCallback","left","right","winner","xIsNext","isDraw","Volume","volume","BoardRow","map","col","squares","row","Board","id","i","calculateWinner","index","Math","trunc","dirList","line","isOverRun","Set","val","size","dir","array","length","element","audioPlay","path","audio","Audio","play","then","console","log","catch","error","warn","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","setXIsNext","isEnter","setIsEnter","setIsDraw","setVolume","socket","setSocket","toggleVolume","newVolume","handleClick","newHistory","slice","place","isPlaceable","winnerStreak","match","includes","concat","resetGame","step","current","winner_streak","type","name","placeholder","ws","WebSocket","addEventListener","e","send","connectWebsocket","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4eca361.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = React.memo(() => {\n  return (\n    <div className=\"game-title\">\n      <span className=\"neon flash\">\n        電<span>電</span>\n      </span>\n      <span className=\"neon flash\">\n        脳<span>脳</span>\n      </span>\n      <span className=\"neon flash\">\n        盤<span>盤</span>\n      </span>\n      <span className=\"neon flash\">\n        上<span>上</span>\n      </span>\n      <span className=\"neon flash\">\n        娯<span>娯</span>\n      </span>\n      <span className=\"neon flash\">\n        楽<span>楽</span>\n      </span>\n      <span className=\"neon flash\">\n        &nbsp;<span>&nbsp;</span>\n      </span>\n      <span className=\"neon flash\">\n        四<span>四</span>\n      </span>\n      <span className=\"neon flash\">\n        子<span>子</span>\n      </span>\n      <span className=\"neon flash\">\n        棋<span>棋</span>\n      </span>\n    </div>\n  );\n});\n\nexport default Title;\n","export default function Stone(props) {\n  let color;\n  if (props.value === null) color = '';\n  else color = props.value === 'X' ? 'stone-color1' : 'stone-color2';\n  return <button className={'stone ' + color} onClick={props.onClick} />;\n}\n","import React, { useCallback } from 'react';\nimport Stone from './stone';\n\nconst Indicator = React.memo((props) => {\n  const voidFunc = useCallback(() => {}, []);\n  let status;\n  let left = null;\n  let right = null;\n  if (props.winner) {\n    status = props.winner;\n  } else {\n    status = props.xIsNext ? 'X' : 'O';\n  }\n  if (!props.isDraw) {\n    if (status === 'X') {\n      left = status;\n    } else {\n      right = status;\n    }\n  }\n  return (\n    <div className=\"indicator\">\n      <Stone value={left} onClick={voidFunc}></Stone>\n      <Stone value={right} onClick={voidFunc}></Stone>\n    </div>\n  );\n});\n\nexport default Indicator;\n","import React from 'react';\nimport '../index.css';\n\nconst Volume = React.memo((props) => {\n  if (props.volume === 1) {\n    return (\n      <div className=\"volume\">\n        <i className=\"fas fa-volume-up fa-3x\" onClick={() => props.onClick()}></i>\n      </div>\n    );\n  } else if (props.volume === 0.5) {\n    return (\n      <div className=\"volume\">\n        <i className=\"fas fa-volume-down fa-3x\" onClick={() => props.onClick()}></i>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"volume\">\n        <i className=\"fas fa-volume-off fa-3x\" onClick={() => props.onClick()}></i>\n      </div>\n    );\n  }\n});\n\nexport default Volume;\n","import Stone from './stone';\n\nexport function BoardRow(props) {\n  return (\n    <div className=\"board-row\">\n      {[0, 1, 2, 3, 4, 5, 6].map((col) => (\n        <Stone\n          key={col}\n          value={props.squares[props.row * 7 + col]}\n          onClick={() => props.onClick(col)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default function Board(props) {\n  return (\n    <div>\n      {[0, 1, 2, 3, 4, 5].map((id) => (\n        <BoardRow key={id} row={id} squares={props.squares} onClick={(i) => props.onClick(i)} />\n      ))}\n    </div>\n  );\n}\n","//  return placeable index number, or return null if stone is full on col\nexport function isPlaceable(squares, col) {\n  for (let row = 5; row >= 0; row--) {\n    const index = row * 7 + col;\n    if (squares[index] === null) return index;\n  }\n  return null;\n}\n\nexport function calculateWinner(squares, index) {\n  const row = Math.trunc(index / 7);\n  const col = index % 7;\n  const dirList = [\n    [0, 1],\n    [-1, 1],\n    [-1, 0],\n    [-1, -1],\n    [0, -1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n\n  if (index === 42) {\n    return null;\n  }\n  if (squares[index] !== null) {\n    for (let i = 0; i < 8; i++) {\n      const line = [\n        (row + dirList[i][0] * 0) * 7 + (col + dirList[i][1] * 0),\n        (row + dirList[i][0] * 1) * 7 + (col + dirList[i][1] * 1),\n        (row + dirList[i][0] * 2) * 7 + (col + dirList[i][1] * 2),\n        (row + dirList[i][0] * 3) * 7 + (col + dirList[i][1] * 3),\n      ];\n      if (!isOverRun(i, line)) continue;\n      const set = new Set(\n        line.map((val) => {\n          return squares[val];\n        }),\n      );\n      if (set.size === 1) {\n        return line;\n      }\n    }\n  }\n  return calculateWinner(squares, index + 1);\n}\n\nfunction isOverRun(dir, array) {\n  for (let i = 0; i < array.length; i++) {\n    const element = array[i];\n    const row = Math.trunc(element / 7);\n    const col = element % 7;\n\n    if (\n      (col === 0 && dir >= 3 && dir <= 5) ||\n      (row === 0 && dir >= 1 && dir <= 3) ||\n      (col === 6 && (dir <= 1 || dir === 7)) ||\n      (row === 5 && dir >= 6 && dir <= 8)\n    )\n      return false;\n  }\n  return true;\n}\n\nexport function audioPlay(path, volume) {\n  const audio = new Audio(path);\n  audio.volume = volume;\n  audio\n    .play()\n    .then(() => {\n      console.log('Audio started!');\n    })\n    .catch((error) => console.warn(error));\n}\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './mobile.css';\n\nimport Title from './components/title';\nimport Indicator from './components/indicator';\nimport Volume from './components/volume';\nimport Board from './components/board';\nimport { isPlaceable, calculateWinner, audioPlay } from './components/utils';\n\nconst Game = () => {\n  const [history, setHistory] = useState([\n    {\n      squares: Array(42).fill(null),\n    },\n  ]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n\n  const [isEnter, setIsEnter] = useState(false);\n  const [isDraw, setIsDraw] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n  const [socket, setSocket] = useState(null);\n  // socketがnullかどうかを対戦モードかどうかの判定に使う\n\n  const toggleVolume = useCallback(() => {\n    audioPlay('audio/switch.mp3', volume);\n    let newVolume;\n    switch (volume) {\n      case 1:\n        newVolume = 0.5;\n        break;\n      case 0.5:\n        newVolume = 0;\n        break;\n      default:\n        newVolume = 1;\n        break;\n    }\n    setVolume(newVolume);\n  }, [volume]);\n\n  const handleClick = useCallback(\n    (i) => {\n      if (!isEnter || isDraw) return;\n      audioPlay('audio/switch.mp3', volume);\n      const newHistory = history.slice(0, stepNumber + 1);\n      const squares = newHistory[newHistory.length - 1].squares.slice();\n      const place = isPlaceable(squares, i);\n      if (calculateWinner(squares, 0) || place === null) {\n        return;\n      }\n      squares[place] = xIsNext ? 'X' : 'O';\n      const winnerStreak = calculateWinner(squares, 0);\n      const winner = winnerStreak ? squares[winnerStreak[0]] : null;\n      if (winnerStreak) {\n        for (let i = 0; i < squares.length; i++) {\n          const match = winnerStreak.includes(i);\n          squares[i] = match ? winner : null;\n        }\n      }\n      if (!winnerStreak && stepNumber === 41) {\n        setIsDraw(true);\n      }\n      setHistory(\n        history.concat([\n          {\n            squares: squares,\n          },\n        ]),\n      );\n      setStepNumber(history.length);\n      setXIsNext(!xIsNext);\n    },\n    [isEnter, isDraw, history, stepNumber, xIsNext, volume],\n  );\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXIsNext(step % 2 === 0);\n  };\n\n  const resetGame = () => {\n    setIsDraw(false);\n    jumpTo(0);\n  };\n\n  // websocket test\n  const connectWebsocket = () => {\n    const ws = new WebSocket('wss://murmuring-lowlands-58469.herokuapp.com');\n    ws.addEventListener('open', (e) => {\n      console.log('get connection with server!');\n      ws.send('message from client!');\n    });\n    setSocket(ws);\n  };\n\n  const sendMessage = () => {\n    socket.send('massage from client!');\n  };\n\n  const current = history[stepNumber];\n  const winner_streak = calculateWinner(current.squares, 0);\n  const winner = winner_streak ? current.squares[winner_streak[0]] : null;\n\n  return (\n    <div className=\"game\">\n      <Title />\n      <div className=\"game-info\">\n        <Indicator xIsNext={xIsNext} isDraw={isDraw} winner={winner} />\n        <button\n          className=\"reset-button\"\n          onClick={() => {\n            audioPlay('audio/switch.mp3', volume);\n            resetGame();\n          }}>\n          RESET\n        </button>\n        <Volume volume={volume} onClick={toggleVolume} />\n        <button\n          className=\"enter-button\"\n          onClick={() => {\n            if (!isEnter) {\n              audioPlay('audio/bell_sound.mp3', volume);\n              setIsEnter(true);\n            }\n          }}>\n          入場 ☞\n        </button>\n      </div>\n      <div className=\"game-body\">\n        <div className={'game-board' + (isEnter ? ' board-on' : '')}>\n          <Board squares={current.squares} onClick={handleClick} />\n        </div>\n      </div>\n      <input type=\"text\" name=\"roomId\" placeholder=\"Enter\" />\n      <button onClick={() => connectWebsocket()}>connectWebsocket</button>\n      <button onClick={() => sendMessage()}>sendMassage</button>\n    </div>\n  );\n};\n\n// ========================================\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}